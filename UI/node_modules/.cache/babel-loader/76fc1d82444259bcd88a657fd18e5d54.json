{"ast":null,"code":"import _defineProperty from \"/home/rakshithjk/Desktop/react/pictureperfect/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst TMDB_IMAGE_BASE_URL = (width = 300) => \"http://localhost:10000/poster_path\";\n\nexport const updateMoviePictureUrls = (movieResult, width = 300) => _objectSpread({}, movieResult, {\n  background_path: \"\".concat(TMDB_IMAGE_BASE_URL(width)).concat(movieResult.background_path),\n  poster_path: \"\".concat(TMDB_IMAGE_BASE_URL(width)).concat(movieResult.poster_path)\n});\nexport const getMoviesList = moviesResponse => {\n  return !!moviesResponse ? [...moviesResponse.results.map(movieResult => updateMoviePictureUrls(movieResult))] : null;\n};","map":{"version":3,"sources":["/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-browser.helpers.js"],"names":["TMDB_IMAGE_BASE_URL","width","updateMoviePictureUrls","movieResult","background_path","poster_path","getMoviesList","moviesResponse","results","map"],"mappings":";;;;;;AAAA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,GAAT,yCAA5B;;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,WAAD,EAAcF,KAAK,GAAG,GAAtB,uBACjCE,WADiC;AAEpCC,EAAAA,eAAe,YAAKJ,mBAAmB,CAACC,KAAD,CAAxB,SAAkCE,WAAW,CAACC,eAA9C,CAFqB;AAGpCC,EAAAA,WAAW,YAAKL,mBAAmB,CAACC,KAAD,CAAxB,SAAkCE,WAAW,CAACE,WAA9C;AAHyB,EAA/B;AAMP,OAAO,MAAMC,aAAa,GAAIC,cAAD,IAAoB;AAC/C,SAAO,CAAC,CAACA,cAAF,GAAoB,CACzB,GAAGA,cAAc,CAACC,OAAf,CAAuBC,GAAvB,CAA2BN,WAAW,IAAID,sBAAsB,CAACC,WAAD,CAAhE,CADsB,CAApB,GAEF,IAFL;AAGD,CAJM","sourcesContent":["const TMDB_IMAGE_BASE_URL = (width = 300) => `http://localhost:10000/poster_path`;\n\nexport const updateMoviePictureUrls = (movieResult, width = 300) => ({\n  ...movieResult,\n  background_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.background_path}`,\n  poster_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.poster_path}`,\n});\n\nexport const getMoviesList = (moviesResponse) => {\n  return !!moviesResponse ? ([\n    ...moviesResponse.results.map(movieResult => updateMoviePictureUrls(movieResult))\n  ]) : null;\n}"]},"metadata":{},"sourceType":"module"}
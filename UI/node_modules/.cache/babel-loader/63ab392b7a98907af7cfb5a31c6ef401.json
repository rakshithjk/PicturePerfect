{"ast":null,"code":"import _defineProperty from \"/home/rakshithjk/Desktop/react/pictureperfect/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-browser.container.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { AppBar, TextField, RaisedButton } from 'material-ui';\nimport * as movieActions from './movie-browser.actions';\nimport * as movieHelpers from './movie-browser.helpers';\nimport MovieList from './movie-list/movie-list.component';\nimport * as scrollHelpers from '../common/scroll.helpers';\nimport MovieModal from './movie-modal/movie-modal.container';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Search from './movie-search/movie-search.container';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './movie-browser.container.css';\nimport MovieDisplay from './movie-display/movie-display.container';\n\nclass MovieBrowser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      currentMovies: []\n    }; // Binds the handleScroll to this class (MovieBrowser)\n    // which provides access to MovieBrowser's props\n    // Note: You don't have to do this if you call a method\n    // directly from a lifecycle method\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.onscroll = this.handleScroll;\n    this.props.getTopMovies(this.state.currentPage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    //console.log(this);\n    //console.log(this.state);\n    //console.log(this.props);\n    //console.log(this.props.topMovies);\n    //console.log(this.props.topMovies.response)\n    //const {topMovies} = this.props;                                            \n    if (!this.props.topMovies.isLoading) {\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\n\n      if (percentageScrolled > .8) {\n        const nextPage = this.state.currentPage + 1;\n        this.props.getTopMovies(nextPage);\n        this.setState({\n          currentPage: nextPage\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this);\n    console.log(this.state);\n    console.log(this.props);\n    console.log(this.props.topMovies);\n    console.log(\"res\", this.props.topMovies.response); //const {topMovies} = this.props;   \n\n    const topMovies = this.props.topMovies;\n    const movies = movieHelpers.getMoviesList(this.props.topMovies.response);\n\n    const Home = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Welcome to Picture Perfect Website!\"));\n\n    return React.createElement(\"div\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      title: \"Movie Browser\",\n      style: {\n        backgroundColor: \"#e91e63\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(RaisedButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Link, {\n      to: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(RaisedButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Link, {\n      to: \"/movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(RaisedButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Movie-List\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"listing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"style\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, 'body { background-color: black; }'), React.createElement(Row, {\n      style: ({\n        display: \"flex\"\n      }, {\n        flexDirection: \"column\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(MovieList, {\n      movies: movies,\n      isLoading: topMovies.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))))), React.createElement(Route, {\n      path: \"/moviedescription/:movieid\",\n      component: MovieDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect( // Map nodes in our state to a properties of our component\nstate => ({\n  topMovies: state.movieBrowser.topMovies\n}), // Map action creators to properties of our component\n_objectSpread({}, movieActions))(MovieBrowser);","map":{"version":3,"sources":["/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-browser.container.js"],"names":["React","connect","Container","Row","Col","AppBar","TextField","RaisedButton","movieActions","movieHelpers","MovieList","scrollHelpers","MovieModal","BrowserRouter","Router","Switch","Route","Link","Search","MovieDisplay","MovieBrowser","Component","constructor","props","state","currentPage","currentMovies","handleScroll","bind","componentDidMount","window","onscroll","getTopMovies","componentWillUnmount","removeEventListener","topMovies","isLoading","percentageScrolled","getPercentageScrolledDown","nextPage","setState","render","console","log","response","movies","getMoviesList","Home","backgroundColor","display","flexDirection","movieBrowser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\nimport * as movieActions from './movie-browser.actions';\nimport * as movieHelpers from './movie-browser.helpers';\nimport MovieList from './movie-list/movie-list.component';\nimport * as scrollHelpers from '../common/scroll.helpers';\nimport MovieModal from './movie-modal/movie-modal.container';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Search from './movie-search/movie-search.container';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './movie-browser.container.css';\nimport MovieDisplay from './movie-display/movie-display.container'\nclass MovieBrowser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      currentMovies: []\n    };\n    // Binds the handleScroll to this class (MovieBrowser)\n    // which provides access to MovieBrowser's props\n    // Note: You don't have to do this if you call a method\n    // directly from a lifecycle method\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.onscroll = this.handleScroll;\n    this.props.getTopMovies(this.state.currentPage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    //console.log(this);\n    //console.log(this.state);\n    //console.log(this.props);\n    //console.log(this.props.topMovies);\n    //console.log(this.props.topMovies.response)\n    //const {topMovies} = this.props;                                            \n    if (!this.props.topMovies.isLoading) {\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\n      if (percentageScrolled > .8) {\n        const nextPage = this.state.currentPage + 1;\n        this.props.getTopMovies(nextPage);\n        this.setState({currentPage: nextPage});\n      }\n    }\n  }\n\n  \n\n\n  render() {\n    console.log(this);\n    console.log(this.state);\n    console.log(this.props);\n    console.log(this.props.topMovies);\n    console.log(\"res\",this.props.topMovies.response)\n    //const {topMovies} = this.props;   \n    const {topMovies} = this.props;\n    const movies = movieHelpers.getMoviesList(this.props.topMovies.response);\n\n    \n    const Home = () => (\n      <div>\n        <h1>Welcome to Picture Perfect Website!</h1>\n      </div>\n    )\n    \n\n\n    return (\n      <div id=\"main\">\n        \n      \n\n    \n      <Router>\n        \n      <AppBar title='Movie Browser' style={{backgroundColor: \"#e91e63\"}} >\n      <Link to=\"/\">\n          <RaisedButton >\n            Home\n          </RaisedButton >\n          </Link>\n\n        <Link to=\"/search\">\n          <RaisedButton >\n            Search\n          </RaisedButton >\n          </Link>\n          <Link to=\"/movie-list\">\n            <RaisedButton > \n            Movie-List\n            </RaisedButton>\n          </Link>\n      </AppBar>\n          <Switch>\n          <Route exact path='/' component={Home}/>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/movie-list\" >  \n              <div id=\"listing\">\n              <Container  style={{backgroundColor: \"black\"}} >\n              <style>{'body { background-color: black; }'}</style>\n                <Row style={{display:\"flex\"},{flexDirection:\"column\"}}>\n                  <MovieList movies={movies} isLoading={topMovies.isLoading}  />\n                </Row>\n              </Container>\n              </div>\n            </Route>\n            <Route path='/moviedescription/:movieid' component={MovieDisplay}/>\n          </Switch>\n        \n        \n    \n    </Router>\n    \n    </div>\n    );\n  }\n\n}\n\nexport default connect(\n  // Map nodes in our state to a properties of our component\n  (state) => ({\n    topMovies: state.movieBrowser.topMovies\n    \n  }),\n  // Map action creators to properties of our component\n  { ...movieActions }\n)(MovieBrowser);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-display/review-display/review-card.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardMedia } from 'material-ui'; //import {openMovieModal} from '../movie-modal/movie-modal.actions';\n\nimport MovieDisplay from '../movie-display/movie-display.container';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { black } from 'material-ui/styles/colors'; // These are inline styles\n// You can pass styles as objects using this convention\n\nconst styles = {\n  cardMedia: {\n    maxHeight: 394,\n    overflow: 'hidden',\n    padding: \"10px\"\n  },\n  card: {\n    cursor: 'pointer',\n    height: 400,\n    backgroundColor: \"black\",\n    overflow: 'hidden'\n  },\n  bgImage: {\n    width: '100%'\n  }\n};\n\nclass ReviewCardComponent extends React.Component {\n  constructor(props) {\n    super(props); // Track if the mouse hovering over the movie card\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // If we will receive a new movieId\n    console.log(\"####################comom\", nextProps); //alert(\"dasdsad\",nextProps);\n  }\n\n  render() {\n    console.log(\"reviewcard\", this.props);\n    const _this$props = this.props,\n          movie = _this$props.movie,\n          openMovieModal = _this$props.openMovieModal; // The CardTitle.subtitle won't render if it's null\n\n    const subtitle = this.state.isMouseOver ? movie.overview : null;\n    console.log(\"qwer\", movie.title);\n    return React.createElement(Card, {\n      style: styles.card,\n      onMouseOver: () => this.setState({\n        isMouseOver: true\n      }),\n      onMouseLeave: () => this.setState({\n        isMouseOver: false\n      }) //onClick= {() => openMovieModal(movie.id)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      style: styles.cardMedia,\n      overlay: React.createElement(CardTitle, {\n        title: movie.title,\n        subtitle: subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: styles.bgImage,\n      src: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(() => ({}), {//openMovieModal \n})(ReviewCardComponent);","map":{"version":3,"sources":["/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-display/review-display/review-card.container.js"],"names":["React","connect","Card","CardTitle","CardMedia","MovieDisplay","BrowserRouter","Router","Route","Link","black","styles","cardMedia","maxHeight","overflow","padding","card","cursor","height","backgroundColor","bgImage","width","ReviewCardComponent","Component","constructor","props","componentWillReceiveProps","nextProps","console","log","render","movie","openMovieModal","subtitle","state","isMouseOver","overview","title","setState","poster_path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,SAAzB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SACEC,aAAa,IAAIC,MADnB,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAMA,SAASC,KAAT,QAAsB,2BAAtB,C,CAEA;AACA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,GADF;AAETC,IAAAA,QAAQ,EAAE,QAFD;AAGTC,IAAAA,OAAO,EAAE;AAHA,GADE;AAMbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,SADJ;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,eAAe,EAAG,OAHd;AAIJL,IAAAA,QAAQ,EAAE;AAJN,GANO;AAYbM,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AAZI,CAAf;;AAiBA,MAAMC,mBAAN,SAAkCtB,KAAK,CAACuB,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AAED;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,SAAzC,EAFkC,CAGlC;AACD;;AACDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKJ,KAA9B;AADO,wBAGyB,KAAKA,KAH9B;AAAA,UAGAM,KAHA,eAGAA,KAHA;AAAA,UAGOC,cAHP,eAGOA,cAHP,EAIP;;AACA,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,WAAX,GAAyBJ,KAAK,CAACK,QAA/B,GAA0C,IAA3D;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBE,KAAK,CAACM,KAAzB;AACA,WAGE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE1B,MAAM,CAACK,IADhB;AAEE,MAAA,WAAW,EAAE,MAAM,KAAKsB,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE;AAAd,OAAd,CAFrB;AAGE,MAAA,YAAY,EAAE,MAAM,KAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE;AAAd,OAAd,CAHtB,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,SAAD;AACE,MAAA,KAAK,EAAExB,MAAM,CAACC,SADhB;AAEE,MAAA,OAAO,EACL,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEmB,KAAK,CAACM,KADf;AAEE,QAAA,QAAQ,EAAEJ,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAK,MAAA,KAAK,EAAEtB,MAAM,CAACS,OAAnB;AAA4B,MAAA,GAAG,EAAEW,KAAK,CAACQ,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CANF,CAHF;AAyBD;;AA5C+C;;AA+ClD,eAAetC,OAAO,CACpB,OAAO,EAAP,CADoB,EAEpB,CAAE;AAAF,CAFoB,CAAP,CAIbqB,mBAJa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Card, CardTitle, CardMedia} from 'material-ui';\n//import {openMovieModal} from '../movie-modal/movie-modal.actions';\nimport MovieDisplay from '../movie-display/movie-display.container'\nimport {\n  BrowserRouter as Router,\n  \n  Route,\n  Link\n} from \"react-router-dom\";\nimport { black } from 'material-ui/styles/colors';\n\n// These are inline styles\n// You can pass styles as objects using this convention\nconst styles = {\n  cardMedia: {\n    maxHeight: 394,\n    overflow: 'hidden',\n    padding: \"10px\"\n  },\n  card: {\n    cursor: 'pointer',\n    height: 400,\n    backgroundColor : \"black\",\n    overflow: 'hidden',\n  },\n  bgImage: {\n    width: '100%'\n  }\n};\n\nclass ReviewCardComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    // Track if the mouse hovering over the movie card\n    \n  }\n  componentWillReceiveProps(nextProps){\n    // If we will receive a new movieId\n    console.log(\"####################comom\", nextProps);\n    //alert(\"dasdsad\",nextProps);\n  }\n  render() {\n    console.log(\"reviewcard\",this.props);\n    \n    const {movie, openMovieModal} = this.props;\n    // The CardTitle.subtitle won't render if it's null\n    const subtitle = this.state.isMouseOver ? movie.overview : null;\n\n    console.log(\"qwer\",movie.title);\n    return (\n      \n         \n      <Card\n        style={styles.card}\n        onMouseOver={() => this.setState({isMouseOver: true})}\n        onMouseLeave={() => this.setState({isMouseOver: false})}\n        //onClick= {() => openMovieModal(movie.id)}\n      >\n        <CardMedia\n          style={styles.cardMedia}\n          overlay={\n            <CardTitle\n              title={movie.title} \n              subtitle={subtitle} \n            />\n          }\n        >\n          <img style={styles.bgImage} src={movie.poster_path} />\n        </CardMedia>\n      </Card>\n      \n      \n      \n    );\n  }\n}\n\nexport default connect(\n  () => ({}),\n  { //openMovieModal \n  }\n)(ReviewCardComponent);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/rakshithjk/Desktop/react/pictureperfect/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-list/movie-list.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport MovieCard from '../movie-card/movie-card.component';\nimport LoaderComponent from '../../common/loader.component';\nimport './movie-list.component.css';\nimport * as movieActions from '../movie-browser.actions';\nconst styles = {\n  movieColumn: {\n    marginBottom: 50\n  }\n};\n\nclass MovieList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    alert('Click happened');\n  }\n\n  render() {\n    const movies = this.props.movies;\n    const isLoading = this.props.isLoading;\n    console.log(\"mosss\", movies);\n    const movieColumns = movies ? movies.map(movie => React.createElement(MovieCard, {\n      movie: movie,\n      styles: {\n        backgroundColor: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })) : null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Filters  \"), React.createElement(\"button\", {\n      className: \"sortButton\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Sort\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, movieColumns, React.createElement(LoaderComponent, {\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect( // Map nodes in our state to a properties of our component\nstate => ({\n  topMovies: state.MovieList.topMovies\n}), // Map action creators to properties of our component\n_objectSpread({}, movieActions))(MovieList);","map":{"version":3,"sources":["/home/rakshithjk/Desktop/react/pictureperfect/src/modules/movie-browser/movie-list/movie-list.component.js"],"names":["React","Row","Col","MovieCard","LoaderComponent","movieActions","styles","movieColumn","marginBottom","MovieList","Component","constructor","props","handleClick","bind","alert","render","movies","isLoading","console","log","movieColumns","map","movie","backgroundColor","connect","state","topMovies"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAO,4BAAP;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,YAAY,EAAE;AADH;AADA,CAAf;;AAMA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZE,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAE;AAAA,UACCC,MADD,GACS,KAAKL,KADd,CACCK,MADD;AAAA,UAECC,SAFD,GAEc,KAAKN,KAFnB,CAECM,SAFD;AAGNC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,MAApB;AACF,UAAMI,YAAY,GAAGJ,MAAM,GAAGA,MAAM,CAACK,GAAP,CAAWC,KAAK,IAE1C,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAyB,MAAA,MAAM,EAAE;AAACC,QAAAA,eAAe,EAAC;AAAjB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF0B,CAAH,GAGtB,IAHL;AAIE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKX,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADA,EAKA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,YADH,EAEE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALA,CADF;AAYD;;AA/BqC;;AAsCxC,eAAeO,OAAO,EACpB;AACCC,KAAD,KAAY;AACVC,EAAAA,SAAS,EAAED,KAAK,CAACjB,SAAN,CAAgBkB;AADjB,CAAZ,CAFoB,EAMpB;AANoB,kBAOftB,YAPe,EAAP,CAQXI,SARW,CAAf","sourcesContent":["import React from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport MovieCard from '../movie-card/movie-card.component';\nimport LoaderComponent from '../../common/loader.component';\nimport './movie-list.component.css'\nimport * as movieActions from '../movie-browser.actions';\n\nconst styles = {\n  movieColumn: {\n    marginBottom: 50\n  }\n}\n\nclass MovieList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    alert('Click happened');\n  }\n  \n  render(){\n    const {movies}=this.props;\n    const {isLoading} = this.props;\n    console.log(\"mosss\",movies);\n  const movieColumns = movies ? movies.map(movie => (\n    \n      <MovieCard movie={movie} styles={{backgroundColor:\"black\"}} />\n  )) : null; \n    return (\n      <div>\n      <div className=\"filters\">\n          <h3 className=\"text\">Filters  </h3>\n          <button className=\"sortButton\" onClick={this.handleClick}  >Sort</button>\n      </div>\n      <Row>\n        {movieColumns}\n        <LoaderComponent isLoading={isLoading} />\n      </Row>\n      </div>\n    );\n  }\n}\n\n   \n  \n  \n\nexport default connect(\n  // Map nodes in our state to a properties of our component\n  (state) => ({\n    topMovies: state.MovieList.topMovies\n    \n  }),\n  // Map action creators to properties of our component\n  { ...movieActions }\n ) (MovieList);"]},"metadata":{},"sourceType":"module"}